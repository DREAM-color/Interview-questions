{"ast":null,"code":"var _jsxFileName = \"/Users/xuanqiyan/Desktop/\\u9762\\u8BD5\\u9636\\u6BB5/\\u9762\\u8BD5\\u9898/\\u6846\\u67B6/react-code-demo/src/components/baseUse/JSXBaseDemo.js\";\nimport React from 'react';\nimport './style.css'; //import List from '../List'\n\nclass JSXBaseDemo extends React.Component {\n  constructor(props) {\n    super(); //调用父组件的构造函数\n\n    this.state = {\n      name: 'xuanqiYan',\n      imgUrl: 'http://baidu.com',\n      flag: true\n    };\n  }\n\n  render() {\n    //  获取变量 插值\n    //const elm =  <p>{this.state.name}</p>\n    //return elm\n    // 表达式\n    const exprElem = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.state.flag ? 'yes' : 'no');\n    return exprElem; // // 子元素\n    // const imgElem = <div>\n    //     <p>我的头像</p>\n    //     <img src=\"xxxx.png\"/>\n    //     <img src={this.state.imgUrl}/>\n    // </div>\n    // return imgElem\n    // // class\n    // const classElem = <p className=\"title\">设置 css class</p>\n    // return classElem\n    // // style\n    // const styleData = { fontSize: '30px',  color: 'blue' }\n    // const styleElem = <p style={styleData}>设置 style</p>\n    // // 内联写法，注意 {{ 和 }}\n    // // const styleElem = <p style={{ fontSize: '30px',  color: 'blue' }}>设置 style</p>\n    // return styleElem\n    // 原生 html\n    // const rawHtml = '<span>富文本内容<i>斜体</i><b>加粗</b></span>'\n    // const rawHtmlData = {\n    //     __html: rawHtml // 注意，必须是这种格式\n    // }\n    // const rawHtmlElem = <div>\n    //     <p dangerouslySetInnerHTML={rawHtmlData}></p>\n    //     <p>{rawHtml}</p>\n    // </div>\n    // return rawHtmlElem\n    // // 加载组件\n    // const componentElem = <div>\n    //     <p>JSX 中加载一个组件</p>\n    //     <hr/>\n    //     <List/>\n    // </div>\n    // return componentElem\n  }\n\n}\n\nexport default JSXBaseDemo;","map":{"version":3,"sources":["/Users/xuanqiyan/Desktop/面试阶段/面试题/框架/react-code-demo/src/components/baseUse/JSXBaseDemo.js"],"names":["React","JSXBaseDemo","Component","constructor","props","state","name","imgUrl","flag","render","exprElem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CACA;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACrB,YADqB,CACd;;AACD,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,WADG;AAETC,MAAAA,MAAM,EAAE,kBAFC;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAKH;;AACDC,EAAAA,MAAM,GAAG;AACL;AACN;AACM;AAEA;AACA,UAAMC,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,KAAL,CAAWG,IAAX,GAAkB,KAAlB,GAA0B,IAA9B,CAAjB;AACA,WAAOE,QAAP,CAPK,CASL;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAvDqC;;AA0D1C,eAAeT,WAAf","sourcesContent":["import React from 'react'\nimport './style.css'\n//import List from '../List'\n\nclass JSXBaseDemo extends React.Component {\n    constructor(props) {\n\t\tsuper()//调用父组件的构造函数\n        this.state = {\n            name: 'xuanqiYan',\n            imgUrl: 'http://baidu.com',\n            flag: true\n        }\n    }\n    render() {\n        //  获取变量 插值\n\t\t//const elm =  <p>{this.state.name}</p>\n        //return elm\n\n        // 表达式\n        const exprElem = <p>{this.state.flag ? 'yes' : 'no'}</p>\n        return exprElem\n\n        // // 子元素\n        // const imgElem = <div>\n        //     <p>我的头像</p>\n        //     <img src=\"xxxx.png\"/>\n        //     <img src={this.state.imgUrl}/>\n        // </div>\n        // return imgElem\n\n        // // class\n        // const classElem = <p className=\"title\">设置 css class</p>\n        // return classElem\n\n        // // style\n        // const styleData = { fontSize: '30px',  color: 'blue' }\n        // const styleElem = <p style={styleData}>设置 style</p>\n        // // 内联写法，注意 {{ 和 }}\n        // // const styleElem = <p style={{ fontSize: '30px',  color: 'blue' }}>设置 style</p>\n        // return styleElem\n\n        // 原生 html\n        // const rawHtml = '<span>富文本内容<i>斜体</i><b>加粗</b></span>'\n        // const rawHtmlData = {\n        //     __html: rawHtml // 注意，必须是这种格式\n        // }\n        // const rawHtmlElem = <div>\n        //     <p dangerouslySetInnerHTML={rawHtmlData}></p>\n        //     <p>{rawHtml}</p>\n        // </div>\n        // return rawHtmlElem\n\n        // // 加载组件\n        // const componentElem = <div>\n        //     <p>JSX 中加载一个组件</p>\n        //     <hr/>\n        //     <List/>\n        // </div>\n        // return componentElem\n    }\n}\n\nexport default JSXBaseDemo\n"]},"metadata":{},"sourceType":"module"}