{"ast":null,"code":"var _jsxFileName = \"/Users/xuanqiyan/Desktop/\\u9762\\u8BD5\\u9636\\u6BB5/\\u9762\\u8BD5\\u9898/\\u6846\\u67B6/react-code-demo/src/components/baseUse/PropsDemo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTitleChange = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      const submitTitle = this.props.submitTitle;\n      submitTitle(this.state.title); // 'abc'\n\n      this.setState({\n        title: ''\n      });\n    };\n\n    this.state = {\n      title: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.title,\n      onChange: this.onTitleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"));\n  }\n\n} // props 类型检查\n\n\nInput.propTypes = {\n  submitTitle: PropTypes.func.isRequired\n};\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const list = this.props.list;\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, list.map((item, index) => {\n      return React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.title));\n    }));\n  }\n\n} // props 类型检查\n\n\nList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.text, this.props.length);\n  }\n\n  componentDidUpdate() {\n    console.log('footer did update');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.text !== this.props.text || nextProps.length !== this.props.length) {\n      return true; // 可以渲染\n    }\n\n    return false; // 不重复渲染\n  } // React 默认：父组件有更新，子组件则无条件也更新！！！\n  // 性能优化对于 React 更加重要！\n  // SCU 一定要每次都用吗？—— 需要的时候才优化\n\n\n}\n\nclass TodoListDemo extends React.Component {\n  constructor(props) {\n    super(props); // 状态（数据）提升\n\n    this.onSubmitTitle = title => {\n      this.setState({\n        list: this.state.list.concat({\n          id: `id-${Date.now()}`,\n          title\n        })\n      });\n    };\n\n    this.state = {\n      list: [{\n        id: 'id-1',\n        title: '标题1'\n      }, {\n        id: 'id-2',\n        title: '标题2'\n      }, {\n        id: 'id-3',\n        title: '标题3'\n      }],\n      footerInfo: '底部文字'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Input, {\n      submitTitle: this.onSubmitTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(List, {\n      list: this.state.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      text: this.state.footerInfo,\n      length: this.state.list.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TodoListDemo;","map":{"version":3,"sources":["/Users/xuanqiyan/Desktop/面试阶段/面试题/框架/react-code-demo/src/components/baseUse/PropsDemo.js"],"names":["React","PropTypes","Input","Component","constructor","props","onTitleChange","e","setState","title","target","value","onSubmit","submitTitle","state","render","propTypes","func","isRequired","List","list","map","item","index","id","arrayOf","object","Footer","text","length","componentDidUpdate","console","log","shouldComponentUpdate","nextProps","nextState","TodoListDemo","onSubmitTitle","concat","Date","now","footerInfo"],"mappings":"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","sourcesContent":["\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: ''\n        }\n    }\n    render() {\n        return <div>\n            <input value={this.state.title} onChange={this.onTitleChange}/>\n            <button onClick={this.onSubmit}>提交</button>\n        </div>\n    }\n    onTitleChange = (e) => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n    onSubmit = () => {\n        const { submitTitle } = this.props\n        submitTitle(this.state.title) // 'abc'\n\n        this.setState({\n            title: ''\n        })\n    }\n}\n// props 类型检查\nInput.propTypes = {\n    submitTitle: PropTypes.func.isRequired\n}\n\nclass List extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        const { list } = this.props\n\n        return <ul>{list.map((item, index) => {\n            return <li key={item.id}>\n                <span>{item.title}</span>\n            </li>\n        })}</ul>\n    }\n}\n// props 类型检查\nList.propTypes = {\n    list: PropTypes.arrayOf(PropTypes.object).isRequired\n}\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return <p>\n            {this.props.text}\n            {this.props.length}\n        </p>\n    }\n    componentDidUpdate() {\n        console.log('footer did update')\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.text !== this.props.text\n            || nextProps.length !== this.props.length) {\n            return true // 可以渲染\n        }\n        return false // 不重复渲染\n    }\n\n    // React 默认：父组件有更新，子组件则无条件也更新！！！\n    // 性能优化对于 React 更加重要！\n    // SCU 一定要每次都用吗？—— 需要的时候才优化\n}\n\nclass TodoListDemo extends React.Component {\n    constructor(props) {\n        super(props)\n        // 状态（数据）提升\n        this.state = {\n            list: [\n                {\n                    id: 'id-1',\n                    title: '标题1'\n                },\n                {\n                    id: 'id-2',\n                    title: '标题2'\n                },\n                {\n                    id: 'id-3',\n                    title: '标题3'\n                }\n            ],\n            footerInfo: '底部文字'\n        }\n    }\n    render() {\n        return <div>\n            <Input submitTitle={this.onSubmitTitle}/>\n            <List list={this.state.list}/>\n            <Footer text={this.state.footerInfo} length={this.state.list.length}/>\n        </div>\n    }\n    onSubmitTitle = (title) => {\n        this.setState({\n            list: this.state.list.concat({\n                id: `id-${Date.now()}`,\n                title\n            })\n        })\n    }\n}\n\nexport default TodoListDemo\n"]},"metadata":{},"sourceType":"module"}